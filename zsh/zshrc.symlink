# zmodload zsh/zprof

# use .localrc for SUPER SECRET stuff that you don't
# want in your public, versioned repo.
if [[ -a ~/.localrc ]]
then
  source ~/.localrc
fi

### shortcut to this dotfiles path is $ZSH
##if [ "$(uname -s)" = "Darwin" ]
##then
##  export ZSH=$HOME/Sync/Shared\ Libraries/dotfiles
##else
##  export ZSH=$HOME/.dotfiles
##fi
##export DOTFILES=$ZSH

# shortcut to this dotfiles path is $ZSH
export ZSH=$HOME/Dropbox/Shared/dotfiles

export DOTFILES=$HOME/Dropbox/Shared/dotfiles

export DEFAULT_USER=clint

# source every .zsh file in this rep
for config_file ($ZSH/**/*.zsh) source $config_file

# editor
export EDITOR='nvim'

##############
# completion #
##############

# initialize autocomplete here, otherwise functions won't be loaded

zmodload zsh/complist
autoload -Uz compinit && compinit -i

# zprof

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

######################
# other custom stuff #
######################

qq() {
    clear

    logpath="$TMPDIR/q"
    if [[ -z "$TMPDIR" ]]; then
        logpath="/tmp/q"
    fi

    if [[ ! -f "$logpath" ]]; then
        echo 'Q LOG' > "$logpath"
    fi

    tail -100f -- "$logpath"
}

qqrm() {
    logpath="$TMPDIR/q"
    if [[ -z "$TMPDIR" ]]; then
        logpath="/tmp/q"
    fi
    if [[ -f "$logpath" ]]; then
        rm "$logpath"
    fi
    qq
}

export PYENV_ROOT="$HOME/.pyenv"
command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"

eval "$(direnv hook zsh)"

## anaconda / miniconda
eval "$(conda "shell.$(basename "${SHELL}")" hook)"

eval "$(atuin init zsh)"
zstyle ':completion:*' menu select
fpath+=~/.zfunc
